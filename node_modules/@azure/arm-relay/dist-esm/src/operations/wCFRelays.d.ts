import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { WCFRelays } from "../operationsInterfaces";
import { RelayAPI } from "../relayAPI";
import { WcfRelay, WCFRelaysListByNamespaceOptionalParams, AuthorizationRule, WCFRelaysListAuthorizationRulesOptionalParams, WCFRelaysCreateOrUpdateOptionalParams, WCFRelaysCreateOrUpdateResponse, WCFRelaysDeleteOptionalParams, WCFRelaysGetOptionalParams, WCFRelaysGetResponse, WCFRelaysCreateOrUpdateAuthorizationRuleOptionalParams, WCFRelaysCreateOrUpdateAuthorizationRuleResponse, WCFRelaysDeleteAuthorizationRuleOptionalParams, WCFRelaysGetAuthorizationRuleOptionalParams, WCFRelaysGetAuthorizationRuleResponse, WCFRelaysListKeysOptionalParams, WCFRelaysListKeysResponse, RegenerateAccessKeyParameters, WCFRelaysRegenerateKeysOptionalParams, WCFRelaysRegenerateKeysResponse } from "../models";
/** Class containing WCFRelays operations. */
export declare class WCFRelaysImpl implements WCFRelays {
    private readonly client;
    /**
     * Initialize a new instance of the class WCFRelays class.
     * @param client Reference to the service client
     */
    constructor(client: RelayAPI);
    /**
     * Lists the WCF relays within the namespace.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param namespaceName The namespace name
     * @param options The options parameters.
     */
    listByNamespace(resourceGroupName: string, namespaceName: string, options?: WCFRelaysListByNamespaceOptionalParams): PagedAsyncIterableIterator<WcfRelay>;
    private listByNamespacePagingPage;
    private listByNamespacePagingAll;
    /**
     * Authorization rules for a WCF relay.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param namespaceName The namespace name
     * @param relayName The relay name.
     * @param options The options parameters.
     */
    listAuthorizationRules(resourceGroupName: string, namespaceName: string, relayName: string, options?: WCFRelaysListAuthorizationRulesOptionalParams): PagedAsyncIterableIterator<AuthorizationRule>;
    private listAuthorizationRulesPagingPage;
    private listAuthorizationRulesPagingAll;
    /**
     * Lists the WCF relays within the namespace.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param namespaceName The namespace name
     * @param options The options parameters.
     */
    private _listByNamespace;
    /**
     * Creates or updates a WCF relay. This operation is idempotent.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param namespaceName The namespace name
     * @param relayName The relay name.
     * @param parameters Parameters supplied to create a WCF relay.
     * @param options The options parameters.
     */
    createOrUpdate(resourceGroupName: string, namespaceName: string, relayName: string, parameters: WcfRelay, options?: WCFRelaysCreateOrUpdateOptionalParams): Promise<WCFRelaysCreateOrUpdateResponse>;
    /**
     * Deletes a WCF relay.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param namespaceName The namespace name
     * @param relayName The relay name.
     * @param options The options parameters.
     */
    delete(resourceGroupName: string, namespaceName: string, relayName: string, options?: WCFRelaysDeleteOptionalParams): Promise<void>;
    /**
     * Returns the description for the specified WCF relay.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param namespaceName The namespace name
     * @param relayName The relay name.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, namespaceName: string, relayName: string, options?: WCFRelaysGetOptionalParams): Promise<WCFRelaysGetResponse>;
    /**
     * Authorization rules for a WCF relay.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param namespaceName The namespace name
     * @param relayName The relay name.
     * @param options The options parameters.
     */
    private _listAuthorizationRules;
    /**
     * Creates or updates an authorization rule for a WCF relay.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param namespaceName The namespace name
     * @param relayName The relay name.
     * @param authorizationRuleName The authorization rule name.
     * @param parameters The authorization rule parameters.
     * @param options The options parameters.
     */
    createOrUpdateAuthorizationRule(resourceGroupName: string, namespaceName: string, relayName: string, authorizationRuleName: string, parameters: AuthorizationRule, options?: WCFRelaysCreateOrUpdateAuthorizationRuleOptionalParams): Promise<WCFRelaysCreateOrUpdateAuthorizationRuleResponse>;
    /**
     * Deletes a WCF relay authorization rule.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param namespaceName The namespace name
     * @param relayName The relay name.
     * @param authorizationRuleName The authorization rule name.
     * @param options The options parameters.
     */
    deleteAuthorizationRule(resourceGroupName: string, namespaceName: string, relayName: string, authorizationRuleName: string, options?: WCFRelaysDeleteAuthorizationRuleOptionalParams): Promise<void>;
    /**
     * Get authorizationRule for a WCF relay by name.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param namespaceName The namespace name
     * @param relayName The relay name.
     * @param authorizationRuleName The authorization rule name.
     * @param options The options parameters.
     */
    getAuthorizationRule(resourceGroupName: string, namespaceName: string, relayName: string, authorizationRuleName: string, options?: WCFRelaysGetAuthorizationRuleOptionalParams): Promise<WCFRelaysGetAuthorizationRuleResponse>;
    /**
     * Primary and secondary connection strings to the WCF relay.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param namespaceName The namespace name
     * @param relayName The relay name.
     * @param authorizationRuleName The authorization rule name.
     * @param options The options parameters.
     */
    listKeys(resourceGroupName: string, namespaceName: string, relayName: string, authorizationRuleName: string, options?: WCFRelaysListKeysOptionalParams): Promise<WCFRelaysListKeysResponse>;
    /**
     * Regenerates the primary or secondary connection strings to the WCF relay.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param namespaceName The namespace name
     * @param relayName The relay name.
     * @param authorizationRuleName The authorization rule name.
     * @param parameters Parameters supplied to regenerate authorization rule.
     * @param options The options parameters.
     */
    regenerateKeys(resourceGroupName: string, namespaceName: string, relayName: string, authorizationRuleName: string, parameters: RegenerateAccessKeyParameters, options?: WCFRelaysRegenerateKeysOptionalParams): Promise<WCFRelaysRegenerateKeysResponse>;
    /**
     * ListByNamespaceNext
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param namespaceName The namespace name
     * @param nextLink The nextLink from the previous successful call to the ListByNamespace method.
     * @param options The options parameters.
     */
    private _listByNamespaceNext;
    /**
     * ListAuthorizationRulesNext
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param namespaceName The namespace name
     * @param relayName The relay name.
     * @param nextLink The nextLink from the previous successful call to the ListAuthorizationRules method.
     * @param options The options parameters.
     */
    private _listAuthorizationRulesNext;
}
//# sourceMappingURL=wCFRelays.d.ts.map