"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var tslib=require("tslib"),coreClient=require("@azure/core-client"),coreRestPipeline=require("@azure/core-rest-pipeline"),coreLro=require("@azure/core-lro");function _interopNamespace(r){var t;return r&&r.__esModule?r:(t=Object.create(null),r&&Object.keys(r).forEach(function(e){var a;"default"!==e&&(a=Object.getOwnPropertyDescriptor(r,e),Object.defineProperty(t,e,a.get?a:{enumerable:!0,get:function(){return r[e]}}))}),t.default=r,Object.freeze(t))}var coreClient__namespace=_interopNamespace(coreClient),coreRestPipeline__namespace=_interopNamespace(coreRestPipeline);const pageMap=new WeakMap;function getContinuationToken(e){return"object"!=typeof e||null===e||null==(e=pageMap.get(e))?void 0:e.continuationToken}function setContinuationToken(e,a){var r;"object"==typeof e&&null!==e&&a&&((r=null!=(r=pageMap.get(e))?r:{}).continuationToken=a,pageMap.set(e,r))}const OperationListResult={type:{name:"Composite",className:"OperationListResult",modelProperties:{value:{serializedName:"value",readOnly:!0,type:{name:"Sequence",element:{type:{name:"Composite",className:"Operation"}}}},nextLink:{serializedName:"nextLink",readOnly:!0,type:{name:"String"}}}}},Operation={type:{name:"Composite",className:"Operation",modelProperties:{name:{serializedName:"name",readOnly:!0,type:{name:"String"}},display:{serializedName:"display",type:{name:"Composite",className:"OperationDisplay"}}}}},OperationDisplay={type:{name:"Composite",className:"OperationDisplay",modelProperties:{provider:{serializedName:"provider",readOnly:!0,type:{name:"String"}},resource:{serializedName:"resource",readOnly:!0,type:{name:"String"}},operation:{serializedName:"operation",readOnly:!0,type:{name:"String"}}}}},ErrorResponse={type:{name:"Composite",className:"ErrorResponse",modelProperties:{code:{serializedName:"code",type:{name:"String"}},message:{serializedName:"message",type:{name:"String"}}}}},CheckNameAvailability={type:{name:"Composite",className:"CheckNameAvailability",modelProperties:{name:{serializedName:"name",required:!0,type:{name:"String"}}}}},CheckNameAvailabilityResult={type:{name:"Composite",className:"CheckNameAvailabilityResult",modelProperties:{message:{serializedName:"message",readOnly:!0,type:{name:"String"}},nameAvailable:{serializedName:"nameAvailable",type:{name:"Boolean"}},reason:{serializedName:"reason",type:{name:"Enum",allowedValues:["None","InvalidName","SubscriptionIsDisabled","NameInUse","NameInLockdown","TooManyNamespaceInCurrentSubscription"]}}}}},RelayNamespaceListResult={type:{name:"Composite",className:"RelayNamespaceListResult",modelProperties:{value:{serializedName:"value",type:{name:"Sequence",element:{type:{name:"Composite",className:"RelayNamespace"}}}},nextLink:{serializedName:"nextLink",type:{name:"String"}}}}},Sku={type:{name:"Composite",className:"Sku",modelProperties:{name:{defaultValue:"Standard",isConstant:!0,serializedName:"name",type:{name:"String"}},tier:{defaultValue:"Standard",isConstant:!0,serializedName:"tier",type:{name:"String"}}}}},Resource={type:{name:"Composite",className:"Resource",modelProperties:{id:{serializedName:"id",readOnly:!0,type:{name:"String"}},name:{serializedName:"name",readOnly:!0,type:{name:"String"}},type:{serializedName:"type",readOnly:!0,type:{name:"String"}}}}},AuthorizationRuleListResult={type:{name:"Composite",className:"AuthorizationRuleListResult",modelProperties:{value:{serializedName:"value",type:{name:"Sequence",element:{type:{name:"Composite",className:"AuthorizationRule"}}}},nextLink:{serializedName:"nextLink",type:{name:"String"}}}}},AccessKeys={type:{name:"Composite",className:"AccessKeys",modelProperties:{primaryConnectionString:{serializedName:"primaryConnectionString",type:{name:"String"}},secondaryConnectionString:{serializedName:"secondaryConnectionString",type:{name:"String"}},primaryKey:{serializedName:"primaryKey",type:{name:"String"}},secondaryKey:{serializedName:"secondaryKey",type:{name:"String"}},keyName:{serializedName:"keyName",type:{name:"String"}}}}},RegenerateAccessKeyParameters={type:{name:"Composite",className:"RegenerateAccessKeyParameters",modelProperties:{keyType:{serializedName:"keyType",required:!0,type:{name:"Enum",allowedValues:["PrimaryKey","SecondaryKey"]}},key:{serializedName:"key",type:{name:"String"}}}}},HybridConnectionListResult={type:{name:"Composite",className:"HybridConnectionListResult",modelProperties:{value:{serializedName:"value",type:{name:"Sequence",element:{type:{name:"Composite",className:"HybridConnection"}}}},nextLink:{serializedName:"nextLink",type:{name:"String"}}}}},WcfRelaysListResult={type:{name:"Composite",className:"WcfRelaysListResult",modelProperties:{value:{serializedName:"value",type:{name:"Sequence",element:{type:{name:"Composite",className:"WcfRelay"}}}},nextLink:{serializedName:"nextLink",type:{name:"String"}}}}},TrackedResource={type:{name:"Composite",className:"TrackedResource",modelProperties:Object.assign(Object.assign({},Resource.type.modelProperties),{location:{serializedName:"location",required:!0,type:{name:"String"}},tags:{serializedName:"tags",type:{name:"Dictionary",value:{type:{name:"String"}}}}})}},ResourceNamespacePatch={type:{name:"Composite",className:"ResourceNamespacePatch",modelProperties:Object.assign(Object.assign({},Resource.type.modelProperties),{tags:{serializedName:"tags",type:{name:"Dictionary",value:{type:{name:"String"}}}}})}},AuthorizationRule={type:{name:"Composite",className:"AuthorizationRule",modelProperties:Object.assign(Object.assign({},Resource.type.modelProperties),{rights:{constraints:{UniqueItems:!0},serializedName:"properties.rights",required:!0,type:{name:"Sequence",element:{type:{name:"Enum",allowedValues:["Manage","Send","Listen"]}}}}})}},HybridConnection={type:{name:"Composite",className:"HybridConnection",modelProperties:Object.assign(Object.assign({},Resource.type.modelProperties),{createdAt:{serializedName:"properties.createdAt",readOnly:!0,type:{name:"DateTime"}},updatedAt:{serializedName:"properties.updatedAt",readOnly:!0,type:{name:"DateTime"}},listenerCount:{constraints:{InclusiveMaximum:25,InclusiveMinimum:0},serializedName:"properties.listenerCount",readOnly:!0,type:{name:"Number"}},requiresClientAuthorization:{serializedName:"properties.requiresClientAuthorization",type:{name:"Boolean"}},userMetadata:{serializedName:"properties.userMetadata",type:{name:"String"}}})}},WcfRelay={type:{name:"Composite",className:"WcfRelay",modelProperties:Object.assign(Object.assign({},Resource.type.modelProperties),{isDynamic:{serializedName:"properties.isDynamic",readOnly:!0,type:{name:"Boolean"}},createdAt:{serializedName:"properties.createdAt",readOnly:!0,type:{name:"DateTime"}},updatedAt:{serializedName:"properties.updatedAt",readOnly:!0,type:{name:"DateTime"}},listenerCount:{constraints:{InclusiveMaximum:25,InclusiveMinimum:0},serializedName:"properties.listenerCount",readOnly:!0,type:{name:"Number"}},relayType:{serializedName:"properties.relayType",type:{name:"Enum",allowedValues:["NetTcp","Http"]}},requiresClientAuthorization:{serializedName:"properties.requiresClientAuthorization",type:{name:"Boolean"}},requiresTransportSecurity:{serializedName:"properties.requiresTransportSecurity",type:{name:"Boolean"}},userMetadata:{serializedName:"properties.userMetadata",type:{name:"String"}}})}},RelayNamespace={type:{name:"Composite",className:"RelayNamespace",modelProperties:Object.assign(Object.assign({},TrackedResource.type.modelProperties),{sku:{serializedName:"sku",type:{name:"Composite",className:"Sku"}},provisioningState:{serializedName:"properties.provisioningState",readOnly:!0,type:{name:"Enum",allowedValues:["Created","Succeeded","Deleted","Failed","Updating","Unknown"]}},createdAt:{serializedName:"properties.createdAt",readOnly:!0,type:{name:"DateTime"}},updatedAt:{serializedName:"properties.updatedAt",readOnly:!0,type:{name:"DateTime"}},serviceBusEndpoint:{serializedName:"properties.serviceBusEndpoint",readOnly:!0,type:{name:"String"}},metricId:{serializedName:"properties.metricId",readOnly:!0,type:{name:"String"}}})}},RelayUpdateParameters={type:{name:"Composite",className:"RelayUpdateParameters",modelProperties:Object.assign(Object.assign({},ResourceNamespacePatch.type.modelProperties),{sku:{serializedName:"sku",type:{name:"Composite",className:"Sku"}},provisioningState:{serializedName:"properties.provisioningState",readOnly:!0,type:{name:"Enum",allowedValues:["Created","Succeeded","Deleted","Failed","Updating","Unknown"]}},createdAt:{serializedName:"properties.createdAt",readOnly:!0,type:{name:"DateTime"}},updatedAt:{serializedName:"properties.updatedAt",readOnly:!0,type:{name:"DateTime"}},serviceBusEndpoint:{serializedName:"properties.serviceBusEndpoint",readOnly:!0,type:{name:"String"}},metricId:{serializedName:"properties.metricId",readOnly:!0,type:{name:"String"}}})}};var Mappers=Object.freeze({__proto__:null,OperationListResult:OperationListResult,Operation:Operation,OperationDisplay:OperationDisplay,ErrorResponse:ErrorResponse,CheckNameAvailability:CheckNameAvailability,CheckNameAvailabilityResult:CheckNameAvailabilityResult,RelayNamespaceListResult:RelayNamespaceListResult,Sku:Sku,Resource:Resource,AuthorizationRuleListResult:AuthorizationRuleListResult,AccessKeys:AccessKeys,RegenerateAccessKeyParameters:RegenerateAccessKeyParameters,HybridConnectionListResult:HybridConnectionListResult,WcfRelaysListResult:WcfRelaysListResult,TrackedResource:TrackedResource,ResourceNamespacePatch:ResourceNamespacePatch,AuthorizationRule:AuthorizationRule,HybridConnection:HybridConnection,WcfRelay:WcfRelay,RelayNamespace:RelayNamespace,RelayUpdateParameters:RelayUpdateParameters});const accept={parameterPath:"accept",mapper:{defaultValue:"application/json",isConstant:!0,serializedName:"Accept",type:{name:"String"}}},$host={parameterPath:"$host",mapper:{serializedName:"$host",required:!0,type:{name:"String"}},skipEncoding:!0},apiVersion={parameterPath:"apiVersion",mapper:{defaultValue:"2017-04-01",isConstant:!0,serializedName:"api-version",type:{name:"String"}}},nextLink={parameterPath:"nextLink",mapper:{serializedName:"nextLink",required:!0,type:{name:"String"}},skipEncoding:!0},contentType={parameterPath:["options","contentType"],mapper:{defaultValue:"application/json",isConstant:!0,serializedName:"Content-Type",type:{name:"String"}}},parameters={parameterPath:"parameters",mapper:CheckNameAvailability},subscriptionId={parameterPath:"subscriptionId",mapper:{serializedName:"subscriptionId",required:!0,type:{name:"String"}}},resourceGroupName={parameterPath:"resourceGroupName",mapper:{constraints:{MaxLength:90,MinLength:1},serializedName:"resourceGroupName",required:!0,type:{name:"String"}}},parameters1={parameterPath:"parameters",mapper:RelayNamespace},namespaceName={parameterPath:"namespaceName",mapper:{constraints:{MaxLength:50,MinLength:6},serializedName:"namespaceName",required:!0,type:{name:"String"}}},parameters2={parameterPath:"parameters",mapper:RelayUpdateParameters},parameters3={parameterPath:"parameters",mapper:AuthorizationRule},authorizationRuleName={parameterPath:"authorizationRuleName",mapper:{constraints:{MinLength:1},serializedName:"authorizationRuleName",required:!0,type:{name:"String"}}},parameters4={parameterPath:"parameters",mapper:RegenerateAccessKeyParameters},parameters5={parameterPath:"parameters",mapper:HybridConnection},hybridConnectionName={parameterPath:"hybridConnectionName",mapper:{constraints:{MinLength:1},serializedName:"hybridConnectionName",required:!0,type:{name:"String"}}},parameters6={parameterPath:"parameters",mapper:WcfRelay},relayName={parameterPath:"relayName",mapper:{constraints:{MinLength:1},serializedName:"relayName",required:!0,type:{name:"String"}}};class OperationsImpl{constructor(e){this.client=e}list(a){const e=this.listPagingAll(a);return{next(){return e.next()},[Symbol.asyncIterator](){return this},byPage:e=>{if(null!=e&&e.maxPageSize)throw new Error("maxPageSize is not supported by this operation.");return this.listPagingPage(a,e)}}}listPagingPage(i,s){return tslib.__asyncGenerator(this,arguments,function*(){let e,a=null==s?void 0:s.continuationToken;var r;for(a||(setContinuationToken(r=(e=yield tslib.__await(this._list(i))).value||[],a=e.nextLink),yield yield tslib.__await(r));a;){e=yield tslib.__await(this._listNext(a,i)),a=e.nextLink;var t=e.value||[];setContinuationToken(t,a),yield yield tslib.__await(t)}})}listPagingAll(s){return tslib.__asyncGenerator(this,arguments,function*(){var a,e;try{for(var r,t=tslib.__asyncValues(this.listPagingPage(s));!(r=yield tslib.__await(t.next())).done;){var i=r.value;yield tslib.__await(yield*tslib.__asyncDelegator(tslib.__asyncValues(i)))}}catch(e){a={error:e}}finally{try{r&&!r.done&&(e=t.return)&&(yield tslib.__await(e.call(t)))}finally{if(a)throw a.error}}})}_list(e){return this.client.sendOperationRequest({options:e},listOperationSpec$1)}_listNext(e,a){return this.client.sendOperationRequest({nextLink:e,options:a},listNextOperationSpec$1)}}const serializer$3=coreClient__namespace.createSerializer(Mappers,!1),listOperationSpec$1={path:"/providers/Microsoft.Relay/operations",httpMethod:"GET",responses:{200:{bodyMapper:OperationListResult},default:{bodyMapper:ErrorResponse}},queryParameters:[apiVersion],urlParameters:[$host],headerParameters:[accept],serializer:serializer$3},listNextOperationSpec$1={path:"{nextLink}",httpMethod:"GET",responses:{200:{bodyMapper:OperationListResult},default:{bodyMapper:ErrorResponse}},urlParameters:[$host,nextLink],headerParameters:[accept],serializer:serializer$3};class LroImpl{constructor(e,a,r,t=r.path,i=r.httpMethod){this.sendOperationFn=e,this.args=a,this.spec=r,this.requestPath=t,this.requestMethod=i}sendInitialRequest(){return tslib.__awaiter(this,void 0,void 0,function*(){return this.sendOperationFn(this.args,this.spec)})}sendPollRequest(a){return tslib.__awaiter(this,void 0,void 0,function*(){var e=this.spec,e=tslib.__rest(e,["requestBody"]);return this.sendOperationFn(this.args,Object.assign(Object.assign({},e),{path:a,httpMethod:"GET"}))})}}class NamespacesImpl{constructor(e){this.client=e}list(a){const e=this.listPagingAll(a);return{next(){return e.next()},[Symbol.asyncIterator](){return this},byPage:e=>{if(null!=e&&e.maxPageSize)throw new Error("maxPageSize is not supported by this operation.");return this.listPagingPage(a,e)}}}listPagingPage(i,s){return tslib.__asyncGenerator(this,arguments,function*(){let e,a=null==s?void 0:s.continuationToken;var r;for(a||(setContinuationToken(r=(e=yield tslib.__await(this._list(i))).value||[],a=e.nextLink),yield yield tslib.__await(r));a;){e=yield tslib.__await(this._listNext(a,i)),a=e.nextLink;var t=e.value||[];setContinuationToken(t,a),yield yield tslib.__await(t)}})}listPagingAll(s){return tslib.__asyncGenerator(this,arguments,function*(){var a,e;try{for(var r,t=tslib.__asyncValues(this.listPagingPage(s));!(r=yield tslib.__await(t.next())).done;){var i=r.value;yield tslib.__await(yield*tslib.__asyncDelegator(tslib.__asyncValues(i)))}}catch(e){a={error:e}}finally{try{r&&!r.done&&(e=t.return)&&(yield tslib.__await(e.call(t)))}finally{if(a)throw a.error}}})}listByResourceGroup(a,r){const e=this.listByResourceGroupPagingAll(a,r);return{next(){return e.next()},[Symbol.asyncIterator](){return this},byPage:e=>{if(null!=e&&e.maxPageSize)throw new Error("maxPageSize is not supported by this operation.");return this.listByResourceGroupPagingPage(a,r,e)}}}listByResourceGroupPagingPage(i,s,o){return tslib.__asyncGenerator(this,arguments,function*(){let e,a=null==o?void 0:o.continuationToken;var r;for(a||(setContinuationToken(r=(e=yield tslib.__await(this._listByResourceGroup(i,s))).value||[],a=e.nextLink),yield yield tslib.__await(r));a;){e=yield tslib.__await(this._listByResourceGroupNext(i,a,s)),a=e.nextLink;var t=e.value||[];setContinuationToken(t,a),yield yield tslib.__await(t)}})}listByResourceGroupPagingAll(s,o){return tslib.__asyncGenerator(this,arguments,function*(){var a,e;try{for(var r,t=tslib.__asyncValues(this.listByResourceGroupPagingPage(s,o));!(r=yield tslib.__await(t.next())).done;){var i=r.value;yield tslib.__await(yield*tslib.__asyncDelegator(tslib.__asyncValues(i)))}}catch(e){a={error:e}}finally{try{r&&!r.done&&(e=t.return)&&(yield tslib.__await(e.call(t)))}finally{if(a)throw a.error}}})}listAuthorizationRules(a,r,t){const e=this.listAuthorizationRulesPagingAll(a,r,t);return{next(){return e.next()},[Symbol.asyncIterator](){return this},byPage:e=>{if(null!=e&&e.maxPageSize)throw new Error("maxPageSize is not supported by this operation.");return this.listAuthorizationRulesPagingPage(a,r,t,e)}}}listAuthorizationRulesPagingPage(i,s,o,n){return tslib.__asyncGenerator(this,arguments,function*(){let e,a=null==n?void 0:n.continuationToken;var r;for(a||(setContinuationToken(r=(e=yield tslib.__await(this._listAuthorizationRules(i,s,o))).value||[],a=e.nextLink),yield yield tslib.__await(r));a;){e=yield tslib.__await(this._listAuthorizationRulesNext(i,s,a,o)),a=e.nextLink;var t=e.value||[];setContinuationToken(t,a),yield yield tslib.__await(t)}})}listAuthorizationRulesPagingAll(s,o,n){return tslib.__asyncGenerator(this,arguments,function*(){var a,e;try{for(var r,t=tslib.__asyncValues(this.listAuthorizationRulesPagingPage(s,o,n));!(r=yield tslib.__await(t.next())).done;){var i=r.value;yield tslib.__await(yield*tslib.__asyncDelegator(tslib.__asyncValues(i)))}}catch(e){a={error:e}}finally{try{r&&!r.done&&(e=t.return)&&(yield tslib.__await(e.call(t)))}finally{if(a)throw a.error}}})}checkNameAvailability(e,a){return this.client.sendOperationRequest({parameters:e,options:a},checkNameAvailabilityOperationSpec)}_list(e){return this.client.sendOperationRequest({options:e},listOperationSpec)}_listByResourceGroup(e,a){return this.client.sendOperationRequest({resourceGroupName:e,options:a},listByResourceGroupOperationSpec)}beginCreateOrUpdate(a,r,t,i){return tslib.__awaiter(this,void 0,void 0,function*(){const s=(e,a)=>tslib.__awaiter(this,void 0,void 0,function*(){return this.client.sendOperationRequest(e,a)});var e=new LroImpl((a,i)=>tslib.__awaiter(this,void 0,void 0,function*(){let r=void 0;const t=null==(e=a.options)?void 0:e.onResponse;var e=Object.assign(Object.assign({},a),{options:Object.assign(Object.assign({},a.options),{onResponse:(e,a)=>{r=e,null!==t&&void 0!==t&&t(e,a)}})});return{flatResponse:yield s(e,i),rawResponse:{statusCode:r.status,body:r.parsedBody,headers:r.headers.toJSON()}}}),{resourceGroupName:a,namespaceName:r,parameters:t,options:i},createOrUpdateOperationSpec$2),e=new coreLro.LroEngine(e,{resumeFrom:null==i?void 0:i.resumeFrom,intervalInMs:null==i?void 0:i.updateIntervalInMs});return yield e.poll(),e})}beginCreateOrUpdateAndWait(e,a,r,t){return tslib.__awaiter(this,void 0,void 0,function*(){return(yield this.beginCreateOrUpdate(e,a,r,t)).pollUntilDone()})}beginDelete(a,r,t){return tslib.__awaiter(this,void 0,void 0,function*(){const s=(e,a)=>tslib.__awaiter(this,void 0,void 0,function*(){return this.client.sendOperationRequest(e,a)});var e=new LroImpl((a,i)=>tslib.__awaiter(this,void 0,void 0,function*(){let r=void 0;const t=null==(e=a.options)?void 0:e.onResponse;var e=Object.assign(Object.assign({},a),{options:Object.assign(Object.assign({},a.options),{onResponse:(e,a)=>{r=e,null!==t&&void 0!==t&&t(e,a)}})});return{flatResponse:yield s(e,i),rawResponse:{statusCode:r.status,body:r.parsedBody,headers:r.headers.toJSON()}}}),{resourceGroupName:a,namespaceName:r,options:t},deleteOperationSpec$2),e=new coreLro.LroEngine(e,{resumeFrom:null==t?void 0:t.resumeFrom,intervalInMs:null==t?void 0:t.updateIntervalInMs});return yield e.poll(),e})}beginDeleteAndWait(e,a,r){return tslib.__awaiter(this,void 0,void 0,function*(){return(yield this.beginDelete(e,a,r)).pollUntilDone()})}get(e,a,r){return this.client.sendOperationRequest({resourceGroupName:e,namespaceName:a,options:r},getOperationSpec$2)}update(e,a,r,t){return this.client.sendOperationRequest({resourceGroupName:e,namespaceName:a,parameters:r,options:t},updateOperationSpec)}_listAuthorizationRules(e,a,r){return this.client.sendOperationRequest({resourceGroupName:e,namespaceName:a,options:r},listAuthorizationRulesOperationSpec$2)}createOrUpdateAuthorizationRule(e,a,r,t,i){return this.client.sendOperationRequest({resourceGroupName:e,namespaceName:a,authorizationRuleName:r,parameters:t,options:i},createOrUpdateAuthorizationRuleOperationSpec$2)}deleteAuthorizationRule(e,a,r,t){return this.client.sendOperationRequest({resourceGroupName:e,namespaceName:a,authorizationRuleName:r,options:t},deleteAuthorizationRuleOperationSpec$2)}getAuthorizationRule(e,a,r,t){return this.client.sendOperationRequest({resourceGroupName:e,namespaceName:a,authorizationRuleName:r,options:t},getAuthorizationRuleOperationSpec$2)}listKeys(e,a,r,t){return this.client.sendOperationRequest({resourceGroupName:e,namespaceName:a,authorizationRuleName:r,options:t},listKeysOperationSpec$2)}regenerateKeys(e,a,r,t,i){return this.client.sendOperationRequest({resourceGroupName:e,namespaceName:a,authorizationRuleName:r,parameters:t,options:i},regenerateKeysOperationSpec$2)}_listNext(e,a){return this.client.sendOperationRequest({nextLink:e,options:a},listNextOperationSpec)}_listByResourceGroupNext(e,a,r){return this.client.sendOperationRequest({resourceGroupName:e,nextLink:a,options:r},listByResourceGroupNextOperationSpec)}_listAuthorizationRulesNext(e,a,r,t){return this.client.sendOperationRequest({resourceGroupName:e,namespaceName:a,nextLink:r,options:t},listAuthorizationRulesNextOperationSpec$2)}}const serializer$2=coreClient__namespace.createSerializer(Mappers,!1),checkNameAvailabilityOperationSpec={path:"/subscriptions/{subscriptionId}/providers/Microsoft.Relay/checkNameAvailability",httpMethod:"POST",responses:{200:{bodyMapper:CheckNameAvailabilityResult},default:{bodyMapper:ErrorResponse}},requestBody:parameters,queryParameters:[apiVersion],urlParameters:[$host,subscriptionId],headerParameters:[accept,contentType],mediaType:"json",serializer:serializer$2},listOperationSpec={path:"/subscriptions/{subscriptionId}/providers/Microsoft.Relay/namespaces",httpMethod:"GET",responses:{200:{bodyMapper:RelayNamespaceListResult},default:{bodyMapper:ErrorResponse}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId],headerParameters:[accept],serializer:serializer$2},listByResourceGroupOperationSpec={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces",httpMethod:"GET",responses:{200:{bodyMapper:RelayNamespaceListResult},default:{bodyMapper:ErrorResponse}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName],headerParameters:[accept],serializer:serializer$2},createOrUpdateOperationSpec$2={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}",httpMethod:"PUT",responses:{200:{bodyMapper:RelayNamespace},201:{bodyMapper:RelayNamespace},202:{bodyMapper:RelayNamespace},204:{bodyMapper:RelayNamespace},default:{bodyMapper:ErrorResponse}},requestBody:parameters1,queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,namespaceName],headerParameters:[accept,contentType],mediaType:"json",serializer:serializer$2},deleteOperationSpec$2={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}",httpMethod:"DELETE",responses:{200:{},201:{},202:{},204:{},default:{bodyMapper:ErrorResponse}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,namespaceName],headerParameters:[accept],serializer:serializer$2},getOperationSpec$2={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}",httpMethod:"GET",responses:{200:{bodyMapper:RelayNamespace},default:{bodyMapper:ErrorResponse}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,namespaceName],headerParameters:[accept],serializer:serializer$2},updateOperationSpec={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}",httpMethod:"PATCH",responses:{200:{bodyMapper:RelayNamespace},201:{bodyMapper:RelayNamespace},default:{bodyMapper:ErrorResponse}},requestBody:parameters2,queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,namespaceName],headerParameters:[accept,contentType],mediaType:"json",serializer:serializer$2},listAuthorizationRulesOperationSpec$2={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/authorizationRules",httpMethod:"GET",responses:{200:{bodyMapper:AuthorizationRuleListResult},default:{bodyMapper:ErrorResponse}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,namespaceName],headerParameters:[accept],serializer:serializer$2},createOrUpdateAuthorizationRuleOperationSpec$2={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/authorizationRules/{authorizationRuleName}",httpMethod:"PUT",responses:{200:{bodyMapper:AuthorizationRule},default:{bodyMapper:ErrorResponse}},requestBody:parameters3,queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,namespaceName,authorizationRuleName],headerParameters:[accept,contentType],mediaType:"json",serializer:serializer$2},deleteAuthorizationRuleOperationSpec$2={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/authorizationRules/{authorizationRuleName}",httpMethod:"DELETE",responses:{200:{},204:{},default:{bodyMapper:ErrorResponse}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,namespaceName,authorizationRuleName],headerParameters:[accept],serializer:serializer$2},getAuthorizationRuleOperationSpec$2={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/authorizationRules/{authorizationRuleName}",httpMethod:"GET",responses:{200:{bodyMapper:AuthorizationRule},default:{bodyMapper:ErrorResponse}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,namespaceName,authorizationRuleName],headerParameters:[accept],serializer:serializer$2},listKeysOperationSpec$2={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/authorizationRules/{authorizationRuleName}/listKeys",httpMethod:"POST",responses:{200:{bodyMapper:AccessKeys},default:{bodyMapper:ErrorResponse}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,namespaceName,authorizationRuleName],headerParameters:[accept],serializer:serializer$2},regenerateKeysOperationSpec$2={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/authorizationRules/{authorizationRuleName}/regenerateKeys",httpMethod:"POST",responses:{200:{bodyMapper:AccessKeys},default:{bodyMapper:ErrorResponse}},requestBody:parameters4,queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,namespaceName,authorizationRuleName],headerParameters:[accept,contentType],mediaType:"json",serializer:serializer$2},listNextOperationSpec={path:"{nextLink}",httpMethod:"GET",responses:{200:{bodyMapper:RelayNamespaceListResult},default:{bodyMapper:ErrorResponse}},urlParameters:[$host,nextLink,subscriptionId],headerParameters:[accept],serializer:serializer$2},listByResourceGroupNextOperationSpec={path:"{nextLink}",httpMethod:"GET",responses:{200:{bodyMapper:RelayNamespaceListResult},default:{bodyMapper:ErrorResponse}},urlParameters:[$host,nextLink,subscriptionId,resourceGroupName],headerParameters:[accept],serializer:serializer$2},listAuthorizationRulesNextOperationSpec$2={path:"{nextLink}",httpMethod:"GET",responses:{200:{bodyMapper:AuthorizationRuleListResult},default:{bodyMapper:ErrorResponse}},urlParameters:[$host,nextLink,subscriptionId,resourceGroupName,namespaceName],headerParameters:[accept],serializer:serializer$2};class HybridConnectionsImpl{constructor(e){this.client=e}listByNamespace(a,r,t){const e=this.listByNamespacePagingAll(a,r,t);return{next(){return e.next()},[Symbol.asyncIterator](){return this},byPage:e=>{if(null!=e&&e.maxPageSize)throw new Error("maxPageSize is not supported by this operation.");return this.listByNamespacePagingPage(a,r,t,e)}}}listByNamespacePagingPage(i,s,o,n){return tslib.__asyncGenerator(this,arguments,function*(){let e,a=null==n?void 0:n.continuationToken;var r;for(a||(setContinuationToken(r=(e=yield tslib.__await(this._listByNamespace(i,s,o))).value||[],a=e.nextLink),yield yield tslib.__await(r));a;){e=yield tslib.__await(this._listByNamespaceNext(i,s,a,o)),a=e.nextLink;var t=e.value||[];setContinuationToken(t,a),yield yield tslib.__await(t)}})}listByNamespacePagingAll(s,o,n){return tslib.__asyncGenerator(this,arguments,function*(){var a,e;try{for(var r,t=tslib.__asyncValues(this.listByNamespacePagingPage(s,o,n));!(r=yield tslib.__await(t.next())).done;){var i=r.value;yield tslib.__await(yield*tslib.__asyncDelegator(tslib.__asyncValues(i)))}}catch(e){a={error:e}}finally{try{r&&!r.done&&(e=t.return)&&(yield tslib.__await(e.call(t)))}finally{if(a)throw a.error}}})}listAuthorizationRules(a,r,t,i){const e=this.listAuthorizationRulesPagingAll(a,r,t,i);return{next(){return e.next()},[Symbol.asyncIterator](){return this},byPage:e=>{if(null!=e&&e.maxPageSize)throw new Error("maxPageSize is not supported by this operation.");return this.listAuthorizationRulesPagingPage(a,r,t,i,e)}}}listAuthorizationRulesPagingPage(i,s,o,n,p){return tslib.__asyncGenerator(this,arguments,function*(){let e,a=null==p?void 0:p.continuationToken;var r;for(a||(setContinuationToken(r=(e=yield tslib.__await(this._listAuthorizationRules(i,s,o,n))).value||[],a=e.nextLink),yield yield tslib.__await(r));a;){e=yield tslib.__await(this._listAuthorizationRulesNext(i,s,o,a,n)),a=e.nextLink;var t=e.value||[];setContinuationToken(t,a),yield yield tslib.__await(t)}})}listAuthorizationRulesPagingAll(s,o,n,p){return tslib.__asyncGenerator(this,arguments,function*(){var a,e;try{for(var r,t=tslib.__asyncValues(this.listAuthorizationRulesPagingPage(s,o,n,p));!(r=yield tslib.__await(t.next())).done;){var i=r.value;yield tslib.__await(yield*tslib.__asyncDelegator(tslib.__asyncValues(i)))}}catch(e){a={error:e}}finally{try{r&&!r.done&&(e=t.return)&&(yield tslib.__await(e.call(t)))}finally{if(a)throw a.error}}})}_listByNamespace(e,a,r){return this.client.sendOperationRequest({resourceGroupName:e,namespaceName:a,options:r},listByNamespaceOperationSpec$1)}createOrUpdate(e,a,r,t,i){return this.client.sendOperationRequest({resourceGroupName:e,namespaceName:a,hybridConnectionName:r,parameters:t,options:i},createOrUpdateOperationSpec$1)}delete(e,a,r,t){return this.client.sendOperationRequest({resourceGroupName:e,namespaceName:a,hybridConnectionName:r,options:t},deleteOperationSpec$1)}get(e,a,r,t){return this.client.sendOperationRequest({resourceGroupName:e,namespaceName:a,hybridConnectionName:r,options:t},getOperationSpec$1)}_listAuthorizationRules(e,a,r,t){return this.client.sendOperationRequest({resourceGroupName:e,namespaceName:a,hybridConnectionName:r,options:t},listAuthorizationRulesOperationSpec$1)}createOrUpdateAuthorizationRule(e,a,r,t,i,s){return this.client.sendOperationRequest({resourceGroupName:e,namespaceName:a,hybridConnectionName:r,authorizationRuleName:t,parameters:i,options:s},createOrUpdateAuthorizationRuleOperationSpec$1)}deleteAuthorizationRule(e,a,r,t,i){return this.client.sendOperationRequest({resourceGroupName:e,namespaceName:a,hybridConnectionName:r,authorizationRuleName:t,options:i},deleteAuthorizationRuleOperationSpec$1)}getAuthorizationRule(e,a,r,t,i){return this.client.sendOperationRequest({resourceGroupName:e,namespaceName:a,hybridConnectionName:r,authorizationRuleName:t,options:i},getAuthorizationRuleOperationSpec$1)}listKeys(e,a,r,t,i){return this.client.sendOperationRequest({resourceGroupName:e,namespaceName:a,hybridConnectionName:r,authorizationRuleName:t,options:i},listKeysOperationSpec$1)}regenerateKeys(e,a,r,t,i,s){return this.client.sendOperationRequest({resourceGroupName:e,namespaceName:a,hybridConnectionName:r,authorizationRuleName:t,parameters:i,options:s},regenerateKeysOperationSpec$1)}_listByNamespaceNext(e,a,r,t){return this.client.sendOperationRequest({resourceGroupName:e,namespaceName:a,nextLink:r,options:t},listByNamespaceNextOperationSpec$1)}_listAuthorizationRulesNext(e,a,r,t,i){return this.client.sendOperationRequest({resourceGroupName:e,namespaceName:a,hybridConnectionName:r,nextLink:t,options:i},listAuthorizationRulesNextOperationSpec$1)}}const serializer$1=coreClient__namespace.createSerializer(Mappers,!1),listByNamespaceOperationSpec$1={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/hybridConnections",httpMethod:"GET",responses:{200:{bodyMapper:HybridConnectionListResult},default:{bodyMapper:ErrorResponse}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,namespaceName],headerParameters:[accept],serializer:serializer$1},createOrUpdateOperationSpec$1={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/hybridConnections/{hybridConnectionName}",httpMethod:"PUT",responses:{200:{bodyMapper:HybridConnection},default:{bodyMapper:ErrorResponse}},requestBody:parameters5,queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,namespaceName,hybridConnectionName],headerParameters:[accept,contentType],mediaType:"json",serializer:serializer$1},deleteOperationSpec$1={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/hybridConnections/{hybridConnectionName}",httpMethod:"DELETE",responses:{200:{},204:{},default:{bodyMapper:ErrorResponse}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,namespaceName,hybridConnectionName],headerParameters:[accept],serializer:serializer$1},getOperationSpec$1={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/hybridConnections/{hybridConnectionName}",httpMethod:"GET",responses:{200:{bodyMapper:HybridConnection},default:{bodyMapper:ErrorResponse}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,namespaceName,hybridConnectionName],headerParameters:[accept],serializer:serializer$1},listAuthorizationRulesOperationSpec$1={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/hybridConnections/{hybridConnectionName}/authorizationRules",httpMethod:"GET",responses:{200:{bodyMapper:AuthorizationRuleListResult},default:{bodyMapper:ErrorResponse}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,namespaceName,hybridConnectionName],headerParameters:[accept],serializer:serializer$1},createOrUpdateAuthorizationRuleOperationSpec$1={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/hybridConnections/{hybridConnectionName}/authorizationRules/{authorizationRuleName}",httpMethod:"PUT",responses:{200:{bodyMapper:AuthorizationRule},default:{bodyMapper:ErrorResponse}},requestBody:parameters3,queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,namespaceName,authorizationRuleName,hybridConnectionName],headerParameters:[accept,contentType],mediaType:"json",serializer:serializer$1},deleteAuthorizationRuleOperationSpec$1={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/hybridConnections/{hybridConnectionName}/authorizationRules/{authorizationRuleName}",httpMethod:"DELETE",responses:{200:{},204:{},default:{bodyMapper:ErrorResponse}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,namespaceName,authorizationRuleName,hybridConnectionName],headerParameters:[accept],serializer:serializer$1},getAuthorizationRuleOperationSpec$1={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/hybridConnections/{hybridConnectionName}/authorizationRules/{authorizationRuleName}",httpMethod:"GET",responses:{200:{bodyMapper:AuthorizationRule},default:{bodyMapper:ErrorResponse}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,namespaceName,authorizationRuleName,hybridConnectionName],headerParameters:[accept],serializer:serializer$1},listKeysOperationSpec$1={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/hybridConnections/{hybridConnectionName}/authorizationRules/{authorizationRuleName}/listKeys",httpMethod:"POST",responses:{200:{bodyMapper:AccessKeys},default:{bodyMapper:ErrorResponse}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,namespaceName,authorizationRuleName,hybridConnectionName],headerParameters:[accept],serializer:serializer$1},regenerateKeysOperationSpec$1={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/hybridConnections/{hybridConnectionName}/authorizationRules/{authorizationRuleName}/regenerateKeys",httpMethod:"POST",responses:{200:{bodyMapper:AccessKeys},default:{bodyMapper:ErrorResponse}},requestBody:parameters4,queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,namespaceName,authorizationRuleName,hybridConnectionName],headerParameters:[accept,contentType],mediaType:"json",serializer:serializer$1},listByNamespaceNextOperationSpec$1={path:"{nextLink}",httpMethod:"GET",responses:{200:{bodyMapper:HybridConnectionListResult},default:{bodyMapper:ErrorResponse}},urlParameters:[$host,nextLink,subscriptionId,resourceGroupName,namespaceName],headerParameters:[accept],serializer:serializer$1},listAuthorizationRulesNextOperationSpec$1={path:"{nextLink}",httpMethod:"GET",responses:{200:{bodyMapper:AuthorizationRuleListResult},default:{bodyMapper:ErrorResponse}},urlParameters:[$host,nextLink,subscriptionId,resourceGroupName,namespaceName,hybridConnectionName],headerParameters:[accept],serializer:serializer$1};class WCFRelaysImpl{constructor(e){this.client=e}listByNamespace(a,r,t){const e=this.listByNamespacePagingAll(a,r,t);return{next(){return e.next()},[Symbol.asyncIterator](){return this},byPage:e=>{if(null!=e&&e.maxPageSize)throw new Error("maxPageSize is not supported by this operation.");return this.listByNamespacePagingPage(a,r,t,e)}}}listByNamespacePagingPage(i,s,o,n){return tslib.__asyncGenerator(this,arguments,function*(){let e,a=null==n?void 0:n.continuationToken;var r;for(a||(setContinuationToken(r=(e=yield tslib.__await(this._listByNamespace(i,s,o))).value||[],a=e.nextLink),yield yield tslib.__await(r));a;){e=yield tslib.__await(this._listByNamespaceNext(i,s,a,o)),a=e.nextLink;var t=e.value||[];setContinuationToken(t,a),yield yield tslib.__await(t)}})}listByNamespacePagingAll(s,o,n){return tslib.__asyncGenerator(this,arguments,function*(){var a,e;try{for(var r,t=tslib.__asyncValues(this.listByNamespacePagingPage(s,o,n));!(r=yield tslib.__await(t.next())).done;){var i=r.value;yield tslib.__await(yield*tslib.__asyncDelegator(tslib.__asyncValues(i)))}}catch(e){a={error:e}}finally{try{r&&!r.done&&(e=t.return)&&(yield tslib.__await(e.call(t)))}finally{if(a)throw a.error}}})}listAuthorizationRules(a,r,t,i){const e=this.listAuthorizationRulesPagingAll(a,r,t,i);return{next(){return e.next()},[Symbol.asyncIterator](){return this},byPage:e=>{if(null!=e&&e.maxPageSize)throw new Error("maxPageSize is not supported by this operation.");return this.listAuthorizationRulesPagingPage(a,r,t,i,e)}}}listAuthorizationRulesPagingPage(i,s,o,n,p){return tslib.__asyncGenerator(this,arguments,function*(){let e,a=null==p?void 0:p.continuationToken;var r;for(a||(setContinuationToken(r=(e=yield tslib.__await(this._listAuthorizationRules(i,s,o,n))).value||[],a=e.nextLink),yield yield tslib.__await(r));a;){e=yield tslib.__await(this._listAuthorizationRulesNext(i,s,o,a,n)),a=e.nextLink;var t=e.value||[];setContinuationToken(t,a),yield yield tslib.__await(t)}})}listAuthorizationRulesPagingAll(s,o,n,p){return tslib.__asyncGenerator(this,arguments,function*(){var a,e;try{for(var r,t=tslib.__asyncValues(this.listAuthorizationRulesPagingPage(s,o,n,p));!(r=yield tslib.__await(t.next())).done;){var i=r.value;yield tslib.__await(yield*tslib.__asyncDelegator(tslib.__asyncValues(i)))}}catch(e){a={error:e}}finally{try{r&&!r.done&&(e=t.return)&&(yield tslib.__await(e.call(t)))}finally{if(a)throw a.error}}})}_listByNamespace(e,a,r){return this.client.sendOperationRequest({resourceGroupName:e,namespaceName:a,options:r},listByNamespaceOperationSpec)}createOrUpdate(e,a,r,t,i){return this.client.sendOperationRequest({resourceGroupName:e,namespaceName:a,relayName:r,parameters:t,options:i},createOrUpdateOperationSpec)}delete(e,a,r,t){return this.client.sendOperationRequest({resourceGroupName:e,namespaceName:a,relayName:r,options:t},deleteOperationSpec)}get(e,a,r,t){return this.client.sendOperationRequest({resourceGroupName:e,namespaceName:a,relayName:r,options:t},getOperationSpec)}_listAuthorizationRules(e,a,r,t){return this.client.sendOperationRequest({resourceGroupName:e,namespaceName:a,relayName:r,options:t},listAuthorizationRulesOperationSpec)}createOrUpdateAuthorizationRule(e,a,r,t,i,s){return this.client.sendOperationRequest({resourceGroupName:e,namespaceName:a,relayName:r,authorizationRuleName:t,parameters:i,options:s},createOrUpdateAuthorizationRuleOperationSpec)}deleteAuthorizationRule(e,a,r,t,i){return this.client.sendOperationRequest({resourceGroupName:e,namespaceName:a,relayName:r,authorizationRuleName:t,options:i},deleteAuthorizationRuleOperationSpec)}getAuthorizationRule(e,a,r,t,i){return this.client.sendOperationRequest({resourceGroupName:e,namespaceName:a,relayName:r,authorizationRuleName:t,options:i},getAuthorizationRuleOperationSpec)}listKeys(e,a,r,t,i){return this.client.sendOperationRequest({resourceGroupName:e,namespaceName:a,relayName:r,authorizationRuleName:t,options:i},listKeysOperationSpec)}regenerateKeys(e,a,r,t,i,s){return this.client.sendOperationRequest({resourceGroupName:e,namespaceName:a,relayName:r,authorizationRuleName:t,parameters:i,options:s},regenerateKeysOperationSpec)}_listByNamespaceNext(e,a,r,t){return this.client.sendOperationRequest({resourceGroupName:e,namespaceName:a,nextLink:r,options:t},listByNamespaceNextOperationSpec)}_listAuthorizationRulesNext(e,a,r,t,i){return this.client.sendOperationRequest({resourceGroupName:e,namespaceName:a,relayName:r,nextLink:t,options:i},listAuthorizationRulesNextOperationSpec)}}const serializer=coreClient__namespace.createSerializer(Mappers,!1),listByNamespaceOperationSpec={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/wcfRelays",httpMethod:"GET",responses:{200:{bodyMapper:WcfRelaysListResult},default:{bodyMapper:ErrorResponse}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,namespaceName],headerParameters:[accept],serializer:serializer},createOrUpdateOperationSpec={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/wcfRelays/{relayName}",httpMethod:"PUT",responses:{200:{bodyMapper:WcfRelay},default:{bodyMapper:ErrorResponse}},requestBody:parameters6,queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,namespaceName,relayName],headerParameters:[accept,contentType],mediaType:"json",serializer:serializer},deleteOperationSpec={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/wcfRelays/{relayName}",httpMethod:"DELETE",responses:{200:{},204:{},default:{bodyMapper:ErrorResponse}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,namespaceName,relayName],headerParameters:[accept],serializer:serializer},getOperationSpec={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/wcfRelays/{relayName}",httpMethod:"GET",responses:{200:{bodyMapper:WcfRelay},204:{},default:{bodyMapper:ErrorResponse}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,namespaceName,relayName],headerParameters:[accept],serializer:serializer},listAuthorizationRulesOperationSpec={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/wcfRelays/{relayName}/authorizationRules",httpMethod:"GET",responses:{200:{bodyMapper:AuthorizationRuleListResult}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,namespaceName,relayName],headerParameters:[accept],serializer:serializer},createOrUpdateAuthorizationRuleOperationSpec={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/wcfRelays/{relayName}/authorizationRules/{authorizationRuleName}",httpMethod:"PUT",responses:{200:{bodyMapper:AuthorizationRule},default:{bodyMapper:ErrorResponse}},requestBody:parameters3,queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,namespaceName,authorizationRuleName,relayName],headerParameters:[accept,contentType],mediaType:"json",serializer:serializer},deleteAuthorizationRuleOperationSpec={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/wcfRelays/{relayName}/authorizationRules/{authorizationRuleName}",httpMethod:"DELETE",responses:{200:{},204:{},default:{bodyMapper:ErrorResponse}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,namespaceName,authorizationRuleName,relayName],headerParameters:[accept],serializer:serializer},getAuthorizationRuleOperationSpec={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/wcfRelays/{relayName}/authorizationRules/{authorizationRuleName}",httpMethod:"GET",responses:{200:{bodyMapper:AuthorizationRule},default:{bodyMapper:ErrorResponse}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,namespaceName,authorizationRuleName,relayName],headerParameters:[accept],serializer:serializer},listKeysOperationSpec={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/wcfRelays/{relayName}/authorizationRules/{authorizationRuleName}/listKeys",httpMethod:"POST",responses:{200:{bodyMapper:AccessKeys},default:{bodyMapper:ErrorResponse}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,namespaceName,authorizationRuleName,relayName],headerParameters:[accept],serializer:serializer},regenerateKeysOperationSpec={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/wcfRelays/{relayName}/authorizationRules/{authorizationRuleName}/regenerateKeys",httpMethod:"POST",responses:{200:{bodyMapper:AccessKeys},default:{bodyMapper:ErrorResponse}},requestBody:parameters4,queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,resourceGroupName,namespaceName,authorizationRuleName,relayName],headerParameters:[accept,contentType],mediaType:"json",serializer:serializer},listByNamespaceNextOperationSpec={path:"{nextLink}",httpMethod:"GET",responses:{200:{bodyMapper:WcfRelaysListResult},default:{bodyMapper:ErrorResponse}},urlParameters:[$host,nextLink,subscriptionId,resourceGroupName,namespaceName],headerParameters:[accept],serializer:serializer},listAuthorizationRulesNextOperationSpec={path:"{nextLink}",httpMethod:"GET",responses:{200:{bodyMapper:AuthorizationRuleListResult}},urlParameters:[$host,nextLink,subscriptionId,resourceGroupName,namespaceName,relayName],headerParameters:[accept],serializer:serializer};class RelayAPI extends coreClient__namespace.ServiceClient{constructor(e,a,r){if(void 0===e)throw new Error("'credentials' cannot be null");if(void 0===a)throw new Error("'subscriptionId' cannot be null");var t,i="azsdk-js-arm-relay/3.1.1",i=(r=r||{}).userAgentOptions&&r.userAgentOptions.userAgentPrefix?r.userAgentOptions.userAgentPrefix+" "+i:i,i=Object.assign(Object.assign(Object.assign({},{requestContentType:"application/json; charset=utf-8",credential:e}),r),{userAgentOptions:{userAgentPrefix:i},endpoint:null!=(i=null!=(i=r.endpoint)?i:r.baseUri)?i:"https://management.azure.com"});super(i);let s=!1;null!=r&&r.pipeline&&0<r.pipeline.getOrderedPolicies().length&&(t=r.pipeline.getOrderedPolicies(),s=t.some(e=>e.name===coreRestPipeline__namespace.bearerTokenAuthenticationPolicyName)),r&&r.pipeline&&0!=r.pipeline.getOrderedPolicies().length&&s||(this.pipeline.removePolicy({name:coreRestPipeline__namespace.bearerTokenAuthenticationPolicyName}),this.pipeline.addPolicy(coreRestPipeline__namespace.bearerTokenAuthenticationPolicy({credential:e,scopes:null!=(t=i.credentialScopes)?t:i.endpoint+"/.default",challengeCallbacks:{authorizeRequestOnChallenge:coreClient__namespace.authorizeRequestOnClaimChallenge}}))),this.subscriptionId=a,this.$host=r.$host||"https://management.azure.com",this.apiVersion=r.apiVersion||"2017-04-01",this.operations=new OperationsImpl(this),this.namespaces=new NamespacesImpl(this),this.hybridConnections=new HybridConnectionsImpl(this),this.wCFRelays=new WCFRelaysImpl(this),this.addCustomApiVersionPolicy(r.apiVersion)}addCustomApiVersionPolicy(i){i&&this.pipeline.addPolicy({name:"CustomApiVersionPolicy",sendRequest(r,t){return tslib.__awaiter(this,void 0,void 0,function*(){var e,a=r.url.split("?");return 1<a.length&&(e=a[1].split("&").map(e=>-1<e.indexOf("api-version")?"api-version="+i:e),r.url=a[0]+"?"+e.join("&")),t(r)})}})}}exports.RelayAPI=RelayAPI,exports.getContinuationToken=getContinuationToken;