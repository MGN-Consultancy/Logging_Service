import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { Namespaces } from "../operationsInterfaces";
import { RelayAPI } from "../relayAPI";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import { RelayNamespace, NamespacesListOptionalParams, NamespacesListByResourceGroupOptionalParams, AuthorizationRule, NamespacesListAuthorizationRulesOptionalParams, CheckNameAvailability, NamespacesCheckNameAvailabilityOptionalParams, NamespacesCheckNameAvailabilityResponse, NamespacesCreateOrUpdateOptionalParams, NamespacesCreateOrUpdateResponse, NamespacesDeleteOptionalParams, NamespacesGetOptionalParams, NamespacesGetResponse, RelayUpdateParameters, NamespacesUpdateOptionalParams, NamespacesUpdateResponse, NamespacesCreateOrUpdateAuthorizationRuleOptionalParams, NamespacesCreateOrUpdateAuthorizationRuleResponse, NamespacesDeleteAuthorizationRuleOptionalParams, NamespacesGetAuthorizationRuleOptionalParams, NamespacesGetAuthorizationRuleResponse, NamespacesListKeysOptionalParams, NamespacesListKeysResponse, RegenerateAccessKeyParameters, NamespacesRegenerateKeysOptionalParams, NamespacesRegenerateKeysResponse } from "../models";
/** Class containing Namespaces operations. */
export declare class NamespacesImpl implements Namespaces {
    private readonly client;
    /**
     * Initialize a new instance of the class Namespaces class.
     * @param client Reference to the service client
     */
    constructor(client: RelayAPI);
    /**
     * Lists all the available namespaces within the subscription regardless of the resourceGroups.
     * @param options The options parameters.
     */
    list(options?: NamespacesListOptionalParams): PagedAsyncIterableIterator<RelayNamespace>;
    private listPagingPage;
    private listPagingAll;
    /**
     * Lists all the available namespaces within the ResourceGroup.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param options The options parameters.
     */
    listByResourceGroup(resourceGroupName: string, options?: NamespacesListByResourceGroupOptionalParams): PagedAsyncIterableIterator<RelayNamespace>;
    private listByResourceGroupPagingPage;
    private listByResourceGroupPagingAll;
    /**
     * Authorization rules for a namespace.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param namespaceName The namespace name
     * @param options The options parameters.
     */
    listAuthorizationRules(resourceGroupName: string, namespaceName: string, options?: NamespacesListAuthorizationRulesOptionalParams): PagedAsyncIterableIterator<AuthorizationRule>;
    private listAuthorizationRulesPagingPage;
    private listAuthorizationRulesPagingAll;
    /**
     * Check the specified namespace name availability.
     * @param parameters Parameters to check availability of the specified namespace name.
     * @param options The options parameters.
     */
    checkNameAvailability(parameters: CheckNameAvailability, options?: NamespacesCheckNameAvailabilityOptionalParams): Promise<NamespacesCheckNameAvailabilityResponse>;
    /**
     * Lists all the available namespaces within the subscription regardless of the resourceGroups.
     * @param options The options parameters.
     */
    private _list;
    /**
     * Lists all the available namespaces within the ResourceGroup.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param options The options parameters.
     */
    private _listByResourceGroup;
    /**
     * Create Azure Relay namespace.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param namespaceName The namespace name
     * @param parameters Parameters supplied to create a namespace resource.
     * @param options The options parameters.
     */
    beginCreateOrUpdate(resourceGroupName: string, namespaceName: string, parameters: RelayNamespace, options?: NamespacesCreateOrUpdateOptionalParams): Promise<PollerLike<PollOperationState<NamespacesCreateOrUpdateResponse>, NamespacesCreateOrUpdateResponse>>;
    /**
     * Create Azure Relay namespace.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param namespaceName The namespace name
     * @param parameters Parameters supplied to create a namespace resource.
     * @param options The options parameters.
     */
    beginCreateOrUpdateAndWait(resourceGroupName: string, namespaceName: string, parameters: RelayNamespace, options?: NamespacesCreateOrUpdateOptionalParams): Promise<NamespacesCreateOrUpdateResponse>;
    /**
     * Deletes an existing namespace. This operation also removes all associated resources under the
     * namespace.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param namespaceName The namespace name
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, namespaceName: string, options?: NamespacesDeleteOptionalParams): Promise<PollerLike<PollOperationState<void>, void>>;
    /**
     * Deletes an existing namespace. This operation also removes all associated resources under the
     * namespace.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param namespaceName The namespace name
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, namespaceName: string, options?: NamespacesDeleteOptionalParams): Promise<void>;
    /**
     * Returns the description for the specified namespace.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param namespaceName The namespace name
     * @param options The options parameters.
     */
    get(resourceGroupName: string, namespaceName: string, options?: NamespacesGetOptionalParams): Promise<NamespacesGetResponse>;
    /**
     * Creates or updates a namespace. Once created, this namespace's resource manifest is immutable. This
     * operation is idempotent.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param namespaceName The namespace name
     * @param parameters Parameters for updating a namespace resource.
     * @param options The options parameters.
     */
    update(resourceGroupName: string, namespaceName: string, parameters: RelayUpdateParameters, options?: NamespacesUpdateOptionalParams): Promise<NamespacesUpdateResponse>;
    /**
     * Authorization rules for a namespace.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param namespaceName The namespace name
     * @param options The options parameters.
     */
    private _listAuthorizationRules;
    /**
     * Creates or updates an authorization rule for a namespace.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param namespaceName The namespace name
     * @param authorizationRuleName The authorization rule name.
     * @param parameters The authorization rule parameters.
     * @param options The options parameters.
     */
    createOrUpdateAuthorizationRule(resourceGroupName: string, namespaceName: string, authorizationRuleName: string, parameters: AuthorizationRule, options?: NamespacesCreateOrUpdateAuthorizationRuleOptionalParams): Promise<NamespacesCreateOrUpdateAuthorizationRuleResponse>;
    /**
     * Deletes a namespace authorization rule.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param namespaceName The namespace name
     * @param authorizationRuleName The authorization rule name.
     * @param options The options parameters.
     */
    deleteAuthorizationRule(resourceGroupName: string, namespaceName: string, authorizationRuleName: string, options?: NamespacesDeleteAuthorizationRuleOptionalParams): Promise<void>;
    /**
     * Authorization rule for a namespace by name.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param namespaceName The namespace name
     * @param authorizationRuleName The authorization rule name.
     * @param options The options parameters.
     */
    getAuthorizationRule(resourceGroupName: string, namespaceName: string, authorizationRuleName: string, options?: NamespacesGetAuthorizationRuleOptionalParams): Promise<NamespacesGetAuthorizationRuleResponse>;
    /**
     * Primary and secondary connection strings to the namespace.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param namespaceName The namespace name
     * @param authorizationRuleName The authorization rule name.
     * @param options The options parameters.
     */
    listKeys(resourceGroupName: string, namespaceName: string, authorizationRuleName: string, options?: NamespacesListKeysOptionalParams): Promise<NamespacesListKeysResponse>;
    /**
     * Regenerates the primary or secondary connection strings to the namespace.
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param namespaceName The namespace name
     * @param authorizationRuleName The authorization rule name.
     * @param parameters Parameters supplied to regenerate authorization rule.
     * @param options The options parameters.
     */
    regenerateKeys(resourceGroupName: string, namespaceName: string, authorizationRuleName: string, parameters: RegenerateAccessKeyParameters, options?: NamespacesRegenerateKeysOptionalParams): Promise<NamespacesRegenerateKeysResponse>;
    /**
     * ListNext
     * @param nextLink The nextLink from the previous successful call to the List method.
     * @param options The options parameters.
     */
    private _listNext;
    /**
     * ListByResourceGroupNext
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param nextLink The nextLink from the previous successful call to the ListByResourceGroup method.
     * @param options The options parameters.
     */
    private _listByResourceGroupNext;
    /**
     * ListAuthorizationRulesNext
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param namespaceName The namespace name
     * @param nextLink The nextLink from the previous successful call to the ListAuthorizationRules method.
     * @param options The options parameters.
     */
    private _listAuthorizationRulesNext;
}
//# sourceMappingURL=namespaces.d.ts.map