/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __awaiter } from "tslib";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { RelayAPI } from "@azure/arm-relay";
import { DefaultAzureCredential } from "@azure/identity";
import * as dotenv from "dotenv";
dotenv.config();
/**
 * This sample demonstrates how to Authorization rule for a namespace by name.
 *
 * @summary Authorization rule for a namespace by name.
 * x-ms-original-file: specification/relay/resource-manager/Microsoft.Relay/stable/2017-04-01/examples/NameSpaces/RelayNameSpaceAutorizationRuleGet.json
 */
function relayNameSpaceAutorizationRuleGet() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["RELAY_SUBSCRIPTION_ID"] ||
            "ffffffff-ffff-ffff-ffff-ffffffffffff";
        const resourceGroupName = process.env["RELAY_RESOURCE_GROUP"] || "resourcegroup";
        const namespaceName = "example-RelayNamespace-01";
        const authorizationRuleName = "example-RelayAuthRules-01";
        const credential = new DefaultAzureCredential();
        const client = new RelayAPI(credential, subscriptionId);
        const result = yield client.namespaces.getAuthorizationRule(resourceGroupName, namespaceName, authorizationRuleName);
        console.log(result);
    });
}
function main() {
    return __awaiter(this, void 0, void 0, function* () {
        relayNameSpaceAutorizationRuleGet();
    });
}
main().catch(console.error);
//# sourceMappingURL=namespacesGetAuthorizationRuleSample.js.map